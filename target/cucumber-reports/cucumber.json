[{"line":1,"elements":[{"start_timestamp":"2023-01-09T11:13:50.733Z","line":3,"name":"Get a request, check the user list and status code","description":"","id":"i-test-api-for-gorest;get-a-request--check-the-user-list-and-status-code","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":4634048800,"status":"passed"},"line":4,"name":"I get users list","match":{"location":"stepDefinitions.MyStepdefs.iGetUsers()"},"keyword":"Given "},{"result":{"duration":39977600,"status":"passed"},"line":5,"name":"I assert to see 200 status code","match":{"arguments":[{"val":"200","offset":16}],"location":"stepDefinitions.MyStepdefs.iAssertToSeeStatusCode(int)"},"keyword":"When "},{"result":{"duration":989475600,"status":"passed"},"line":6,"name":"I assert to see 10 users in list","match":{"arguments":[{"val":"10","offset":16}],"location":"stepDefinitions.MyStepdefs.checkUsersLength(int)"},"keyword":"Then "}]},{"start_timestamp":"2023-01-09T11:13:56.476Z","line":8,"name":"Create new user","description":"","id":"i-test-api-for-gorest;create-new-user","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":706070800,"status":"passed"},"line":9,"name":"I create new user","match":{"location":"stepDefinitions.MyStepdefs.iCreateNewUser()"},"keyword":"Given "},{"result":{"status":"passed"},"line":10,"name":"I assert to see 201 status code","match":{"arguments":[{"val":"201","offset":16}],"location":"stepDefinitions.MyStepdefs.iAssertToSeeStatusCode(int)"},"keyword":"When "},{"result":{"duration":139516100,"status":"passed"},"line":11,"name":"I assert that the Location header contains the URL pointing to the newly created resource","match":{"location":"stepDefinitions.MyStepdefs.iAssertThatTheLocationHeaderContainsTheURLPointingToTheNewlyCreatedResource()"},"keyword":"And "},{"result":{"duration":1082710800,"status":"passed"},"line":12,"name":"I get newly created user request","match":{"location":"stepDefinitions.MyStepdefs.iGetNewlyCreatedUserRequest()"},"keyword":"And "},{"result":{"status":"passed"},"line":13,"name":"I assert to see 200 status code","match":{"arguments":[{"val":"200","offset":16}],"location":"stepDefinitions.MyStepdefs.iAssertToSeeStatusCode(int)"},"keyword":"And "},{"result":{"duration":49554500,"status":"passed"},"line":14,"name":"I assert that created user has details","match":{"location":"stepDefinitions.MyStepdefs.iAssertThatCreatedUserHasDetails()"},"keyword":"And "},{"result":{"duration":1145559400,"status":"passed"},"line":15,"name":"I remove the newly created user","match":{"location":"stepDefinitions.MyStepdefs.iRemoveTheNewlyCreatedUser()"},"keyword":"And "},{"result":{"status":"passed"},"line":16,"name":"I assert to see 204 status code","match":{"arguments":[{"val":"204","offset":16}],"location":"stepDefinitions.MyStepdefs.iAssertToSeeStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2023-01-09T11:13:59.619Z","line":18,"name":"Update the user name","description":"","id":"i-test-api-for-gorest;update-the-user-name","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1540128500,"status":"passed"},"line":19,"name":"I Update the user name with PATCH","match":{"location":"stepDefinitions.MyStepdefs.iUpdateTheUserNameWithPATCH()"},"keyword":"Given "},{"result":{"duration":421680100,"status":"passed"},"line":20,"name":"I get newly created user request","match":{"location":"stepDefinitions.MyStepdefs.iGetNewlyCreatedUserRequest()"},"keyword":"When "},{"result":{"duration":472925300,"status":"passed"},"line":21,"name":"I assert that the user name has been updated","match":{"location":"stepDefinitions.MyStepdefs.iAssertThatTheUserNameHasBeenUpdated()"},"keyword":"And "},{"result":{"status":"passed"},"line":22,"name":"I assert to see 200 status code","match":{"arguments":[{"val":"200","offset":16}],"location":"stepDefinitions.MyStepdefs.iAssertToSeeStatusCode(int)"},"keyword":"And "},{"result":{"duration":425374900,"status":"passed"},"line":23,"name":"I remove the newly created user","match":{"location":"stepDefinitions.MyStepdefs.iRemoveTheNewlyCreatedUser()"},"keyword":"And "},{"result":{"duration":9995700,"status":"passed"},"line":24,"name":"I assert to see 204 status code","match":{"arguments":[{"val":"204","offset":16}],"location":"stepDefinitions.MyStepdefs.iAssertToSeeStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2023-01-09T11:14:02.499Z","line":26,"name":"Update the user status","description":"","id":"i-test-api-for-gorest;update-the-user-status","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":886756900,"status":"passed"},"line":27,"name":"I Update the user status with PATCH","match":{"location":"stepDefinitions.MyStepdefs.iUpdateTheUserStatusWithPATCH()"},"keyword":"Given "},{"result":{"duration":447091200,"status":"passed"},"line":28,"name":"I get newly created user request","match":{"location":"stepDefinitions.MyStepdefs.iGetNewlyCreatedUserRequest()"},"keyword":"When "},{"result":{"duration":448899900,"status":"passed"},"line":29,"name":"I assert that the user status has been updated","match":{"location":"stepDefinitions.MyStepdefs.iAssertThatTheUserStatusHasBeenUpdated()"},"keyword":"And "},{"result":{"status":"passed"},"line":30,"name":"I assert to see 200 status code","match":{"arguments":[{"val":"200","offset":16}],"location":"stepDefinitions.MyStepdefs.iAssertToSeeStatusCode(int)"},"keyword":"And "},{"result":{"duration":439629600,"status":"passed"},"line":31,"name":"I remove the newly created user","match":{"location":"stepDefinitions.MyStepdefs.iRemoveTheNewlyCreatedUser()"},"keyword":"And "},{"result":{"status":"passed"},"line":32,"name":"I assert to see 204 status code","match":{"arguments":[{"val":"204","offset":16}],"location":"stepDefinitions.MyStepdefs.iAssertToSeeStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2023-01-09T11:14:04.732Z","line":34,"name":"Update the user all details","description":"","id":"i-test-api-for-gorest;update-the-user-all-details","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1373076900,"status":"passed"},"line":35,"name":"I Update the user all details","match":{"location":"stepDefinitions.MyStepdefs.iUpdateTheUserAllDetails()"},"keyword":"Given "},{"result":{"status":"passed"},"line":36,"name":"I assert to see 201 status code","match":{"arguments":[{"val":"201","offset":16}],"location":"stepDefinitions.MyStepdefs.iAssertToSeeStatusCode(int)"},"keyword":"When "},{"result":{"duration":10001000,"status":"passed"},"line":37,"name":"I assert that the Location header contains the URL pointing to the newly created resource","match":{"location":"stepDefinitions.MyStepdefs.iAssertThatTheLocationHeaderContainsTheURLPointingToTheNewlyCreatedResource()"},"keyword":"And "},{"result":{"duration":425657400,"status":"passed"},"line":38,"name":"I get newly created user request","match":{"location":"stepDefinitions.MyStepdefs.iGetNewlyCreatedUserRequest()"},"keyword":"And "},{"result":{"duration":458881000,"status":"passed"},"line":39,"name":"I assert that the user status and name has been updated","match":{"location":"stepDefinitions.MyStepdefs.iAssertThatTheUserStatusAndNameHasBeenUpdated()"},"keyword":"And "},{"result":{"status":"passed"},"line":40,"name":"I assert to see 200 status code","match":{"arguments":[{"val":"200","offset":16}],"location":"stepDefinitions.MyStepdefs.iAssertToSeeStatusCode(int)"},"keyword":"And "},{"result":{"duration":505593200,"status":"passed"},"line":41,"name":"I remove the newly created user","match":{"location":"stepDefinitions.MyStepdefs.iRemoveTheNewlyCreatedUser()"},"keyword":"And "},{"result":{"status":"passed"},"line":42,"name":"I assert to see 204 status code","match":{"arguments":[{"val":"204","offset":16}],"location":"stepDefinitions.MyStepdefs.iAssertToSeeStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2023-01-09T11:14:07.515Z","line":44,"name":"POST a new user using invalid Authorization","description":"","id":"i-test-api-for-gorest;post-a-new-user-using-invalid-authorization","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":356552700,"status":"passed"},"line":45,"name":"I create the new user with an invalid token","match":{"location":"stepDefinitions.MyStepdefs.iCreateTheNewUserWithAnInvalidToken()"},"keyword":"Given "},{"result":{"status":"passed"},"line":46,"name":"I assert to see 401 status code","match":{"arguments":[{"val":"401","offset":16}],"location":"stepDefinitions.MyStepdefs.iAssertToSeeStatusCode(int)"},"keyword":"When "},{"result":{"duration":19624600,"status":"passed"},"line":47,"name":"I assert that the error message","match":{"location":"stepDefinitions.MyStepdefs.iAssertThatTheErrorMessage()"},"keyword":"Then "}]},{"start_timestamp":"2023-01-09T11:14:07.891Z","line":49,"name":"POST a new user with invalid email address","description":"","id":"i-test-api-for-gorest;post-a-new-user-with-invalid-email-address","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":629573200,"status":"passed"},"line":50,"name":"I create a new user with invalid email address","match":{"location":"stepDefinitions.MyStepdefs.iCreateANewUserWithInvalidEmailAddress()"},"keyword":"Given "},{"result":{"status":"passed"},"line":51,"name":"I assert to see 422 status code","match":{"arguments":[{"val":"422","offset":16}],"location":"stepDefinitions.MyStepdefs.iAssertToSeeStatusCode(int)"},"keyword":"When "},{"result":{"duration":100441300,"status":"passed"},"line":52,"name":"I assert that the error message for invalid email","match":{"location":"stepDefinitions.MyStepdefs.iAssertThatTheErrorMessageForInvalidEmail()"},"keyword":"Then "}]},{"start_timestamp":"2023-01-09T11:14:08.631Z","line":54,"name":"Post new user using invalid status","description":"","id":"i-test-api-for-gorest;post-new-user-using-invalid-status","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":441956000,"status":"passed"},"line":55,"name":"I create a new user with invalid status","match":{"location":"stepDefinitions.MyStepdefs.iCreateANewUserWithInvalidStatus()"},"keyword":"Given "},{"result":{"duration":10004700,"status":"passed"},"line":56,"name":"I assert to see 422 status code","match":{"arguments":[{"val":"422","offset":16}],"location":"stepDefinitions.MyStepdefs.iAssertToSeeStatusCode(int)"},"keyword":"When "},{"result":{"duration":10020400,"status":"passed"},"line":57,"name":"I assert that the error message for invalid status","match":{"location":"stepDefinitions.MyStepdefs.iAssertThatTheErrorMessageForInvalidStatus()"},"keyword":"Then "}]},{"start_timestamp":"2023-01-09T11:14:09.103Z","line":59,"name":"Post new user using invalid gender","description":"","id":"i-test-api-for-gorest;post-new-user-using-invalid-gender","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":456885500,"status":"passed"},"line":60,"name":"I create a new user with invalid gender","match":{"location":"stepDefinitions.MyStepdefs.iCreateANewUserWithInvalidGender()"},"keyword":"Given "},{"result":{"status":"passed"},"line":61,"name":"I assert to see 422 status code","match":{"arguments":[{"val":"422","offset":16}],"location":"stepDefinitions.MyStepdefs.iAssertToSeeStatusCode(int)"},"keyword":"When "},{"result":{"duration":9996200,"status":"passed"},"line":62,"name":"I assert that the error message for invalid gender","match":{"location":"stepDefinitions.MyStepdefs.iAssertThatTheErrorMessageForInvalidGender()"},"keyword":"Then "}]},{"start_timestamp":"2023-01-09T11:14:09.580Z","line":64,"name":"Get a new user details using wrong user id","description":"","id":"i-test-api-for-gorest;get-a-new-user-details-using-wrong-user-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":438235300,"status":"passed"},"line":65,"name":"I create new user","match":{"location":"stepDefinitions.MyStepdefs.iCreateNewUser()"},"keyword":"Given "},{"result":{"duration":9549700,"status":"passed"},"line":66,"name":"I assert to see 201 status code","match":{"arguments":[{"val":"201","offset":16}],"location":"stepDefinitions.MyStepdefs.iAssertToSeeStatusCode(int)"},"keyword":"When "},{"result":{"duration":9992800,"status":"passed"},"line":67,"name":"I assert that the Location header contains the URL pointing to the newly created resource","match":{"location":"stepDefinitions.MyStepdefs.iAssertThatTheLocationHeaderContainsTheURLPointingToTheNewlyCreatedResource()"},"keyword":"And "},{"result":{"duration":414171800,"status":"passed"},"line":68,"name":"I get user with invalid id","match":{"location":"stepDefinitions.MyStepdefs.iGetUserWithInvalidId()"},"keyword":"And "},{"result":{"status":"passed"},"line":69,"name":"I assert to see 404 status code","match":{"arguments":[{"val":"404","offset":16}],"location":"stepDefinitions.MyStepdefs.iAssertToSeeStatusCode(int)"},"keyword":"And "},{"result":{"duration":29981600,"status":"passed"},"line":70,"name":"I assert that the error message for an invalid id get request","match":{"location":"stepDefinitions.MyStepdefs.iAssertThatTheErrorMessageForAnInvalidIdGetRequest()"},"keyword":"Then "}]}],"name":"I test API for Gorest","description":"","id":"i-test-api-for-gorest","keyword":"Feature","uri":"file:src/test/resources/features/Tests.feature","tags":[]}]